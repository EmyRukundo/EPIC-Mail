{"version":3,"sources":["user.js"],"names":["process","env","NODE_ENV","chai","should","use","chaiHttp","describe","it","request","app","get","end","err","res","have","status","post","send","email","password","body","be","a","userAccount","id","firstname","lastname","error"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuB,MAAvB;;AAEAC,eAAKC,MAAL;AACAD,eAAKE,GAAL,CAASC,kBAAT;;AAGA;;AAEEC,SAAS,eAAT,EAA0B,YAAM;AAC9BC,KAAG,sBAAH,EAA2B,YAAM;AAC/BL,mBAAKM,OAAL,CAAaC,aAAb,EAAkBC,GAAlB,CAAsB,uBAAtB,EAA+CC,GAA/C,CAAmD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/DA,UAAIV,MAAJ,CAAWW,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AAED,KAHD;AAID,GALD;AAMD,CAPD;;AASA;;AAEAT,SAAS,oBAAT,EAA+B,YAAM;AACnCC,KAAG,gCAAH,EAAqC,YAAM;AACzCL,mBAAKM,OAAL,CAAaC,aAAb,EAAkBO,IAAlB,CAAuB,oBAAvB,EAA6CC,IAA7C,CAAkD;AAC7CC,aAAO,UADsC,EAC1BC,UAAU,SADgB,EAAlD,EAC+CR,GAD/C,CACmD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/DA,UAAIV,MAAJ,CAAWW,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,UAAIO,IAAJ,CAASjB,MAAT,CAAgBkB,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACD,KAJD;AAKD,GAND;AAOD,CARD;;AAWAhB,SAAS,0BAAT,EAAqC,YAAM;AACzCC,KAAG,0BAAH,EAA+B,YAAM;AACnC,QAAMgB,cAAc;AAClBC,UAAG,CADe;AAElBN,aAAM,uBAFY;AAGlBO,iBAAU,UAHQ;AAIlBC,gBAAS,SAJS;AAKlBP,gBAAS;AALS,KAApB;AAOAjB,mBAAKM,OAAL,CAAaC,aAAb,EAAkBO,IAAlB,CAAuB,qBAAvB,EAA8CC,IAA9C,CAAmDM,WAAnD,EAAgEZ,GAAhE,CAAoE,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChF,UAAI;AACFA,YAAIV,MAAJ,CAAWW,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIO,IAAJ,CAASjB,MAAT,CAAgBkB,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACD,OAHD,CAGE,OAAOK,KAAP,EAAc;AACd,cAAMA,KAAN;AACD;AACF,KAPD;AAQD,GAhBD;AAiBD,CAlBD","file":"user.js","sourceRoot":"C:/Users/Admin/Desktop/mail/EPIC-Mail/server/test","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../app.js';\r\n\r\nprocess.env.NODE_ENV = 'test';\r\n\r\nchai.should();\r\nchai.use(chaiHttp);\r\n\r\n\r\n//  test for getting all users\r\n\r\n  describe('GET ALL USERS', () => {\r\n    it('Should get all users', () => {\r\n      chai.request(app).get('/api/v1/auth/getUsers').end((err, res) => {\r\n        res.should.have.status(200);\r\n        \r\n      });\r\n    });\r\n  });\r\n\r\n  //login test\r\n\r\n  describe('TESTING USER LOGIN', () => {\r\n    it('Should login into user account', () => {\r\n      chai.request(app).post('/api/v1/auth/login').send({\r\n           email: 'Emmanuel', password: 'Rukundo' }).end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  describe('CAN CREATE A NEW ACCOUNT', () => {\r\n    it('Should create a new user', () => {\r\n      const userAccount = {\r\n        id:1,\r\n        email:'rukundoemma@gmail.com',\r\n        firstname:'Emmanuel',\r\n        lastname:'Rukundo',\r\n        password:'success'\r\n      };\r\n      chai.request(app).post('/api/v1/auth/signup').send(userAccount).end((err, res) => {\r\n        try {\r\n          res.should.have.status(200);\r\n          res.body.should.be.a('object');\r\n        } catch (error) {\r\n          throw error;\r\n        }\r\n      });\r\n    });\r\n  });"]}